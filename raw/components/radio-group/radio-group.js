import{html as r,render as o}from"./lit-html.js";import n from"./supercomponent.js";import i from"./env.js";import a from"./radio.js";import{parseDataset as l}from"./general.js";import{unsafeHTML as d}from"./unsafe-html.js";import u from"./soundscape.js";class s extends n{constructor(t){super(),t.options.map(e=>{e.name=t.name,e.disabled=t?.disabled??!1}),this.model={label:"",instructions:"",disabled:!1,name:"",options:[],css:"",class:"",attributes:{},required:!1},this.model=l(this.dataset,this.model),i.css("radio-group").then(()=>{this.set(t,!0),this.render()})}getName(){return this.model.name}getValue(){let t=null;for(let e=0;e<this.model.options.length;e++)if(this.model.options[e].checked){t=this.model.options[e].value;break}return t}reset(){const t=this.get();for(let e=0;e<t.options.length;e++)t.options[e].checked=!1;t.options[0].checked=!0,this.set(t)}clearError(){this.state==="ERROR"&&this.trigger("RESET")}setError(t){t?.length&&(this.set({error:t}),this.trigger("ERROR"),u.play("error"))}validate(){let t=!0;if(this.model.required){t=!1;for(let e=0;e<this.model.options.length;e++)if(this.model.options[e].checked){t=!0;break}t||this.setError("This field is required")}return t}render(){this.className=`${this.model.class} ${this.model.disabled?"is-disabled":""}`,this.style.cssText=this.model.css,Object.keys(this.model.attributes).map(e=>{this.setAttribute(e,`${this.model.attributes[e]}`)}),this.setAttribute("form-input","");const t=r`
            <p>
                <strong>${this.model.label}</strong>
                ${d(this.model.instructions)}
            </p>
            ${this.model.options.map(e=>new a(e))}
        `;o(t,this)}}i.bind("radio-group",s);export{s as default};
