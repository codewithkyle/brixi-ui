import{html as s,render as l}from"./lit-html.js";import{unsafeHTML as h}from"./unsafe-html.js";import a from"./env.js";import{parseDataset as c}from"./general.js";import u from"./progress-indicator.js";import b from"./component.js";a.css(["button","download-button"]);class r extends b{constructor(){super();this.handleClick=t=>{this.fetchData()};this.handleKeydown=t=>{t instanceof KeyboardEvent&&t.key.toLowerCase()===" "&&this.classList.add("is-active")};this.handleKeyup=t=>{t instanceof KeyboardEvent&&t.key.toLowerCase()===" "&&(this.classList.remove("is-active"),this.fetchData())};this.downloading=!1,this.model={label:"",downloadingLabel:"downloading",kind:"solid",color:"primary",shape:"default",size:"default",icon:"",url:location.origin,options:{method:"GET"},workerURL:"/spa/js/file-download-worker.js"}}static get observedAttributes(){return["data-label","data-icon","data-kind","data-color","data-shape","data-size","data-url","data-options","data-worker-url","data-downloading-label"]}async connected(){const t=c(this.dataset,this.model);this.set(t),this.addEventListener("click",this.handleClick),this.addEventListener("keydown",this.handleKeydown),this.addEventListener("keyup",this.handleKeyup)}async fetchData(){if(this.downloading)return;this.downloading=!0;const t=this.querySelector("svg, img");t&&(t.style.display="none");const e=this.querySelector("span");e&&(e.innerText=this.model.downloadingLabel);const i=new Worker(this.model.workerURL);i.onmessage=d=>{const{type:n,data:o}=d.data;switch(n){case"tick":this.indicator.tick(o);break;case"start":this.indicator=new u,this.indicator.className="mr-0.5",this.indicator.style.marginLeft="-0.25rem",this.indicator.set({total:o,color:"grey"}),this.insertBefore(this.indicator,this.childNodes[0]);break;case"done":this.dispatchEvent(new CustomEvent("download",{detail:{blob:new Blob([o])},bubbles:!0,cancelable:!0})),this.indicator.remove(),e.innerText=this.model.label,t&&(t.style.display="inline-block"),i.terminate(),this.downloading=!1;break;case"error":this.dispatchEvent(new CustomEvent("error",{detail:{error:o},bubbles:!0,cancelable:!0})),i.terminate(),this.indicator.remove(),e.innerText=this.model.label,t&&(t.style.display="inline-block"),this.downloading=!1;break;default:console.warn(`Unhandled file download worker message type: ${n}`);break}},i.postMessage({url:this.model.url,options:this.model.options})}renderIcon(){let t;return this.model.icon.length?t=s`${h(this.model.icon)}`:t="",t}render(){const t=s` ${this.renderIcon()} <span>${this.model.label}</span> `;this.classList.add("bttn"),this.setAttribute("role","button"),this.tabIndex=0,this.setAttribute("color",this.model.color),this.setAttribute("size",this.model.size),this.setAttribute("kind",this.model.kind),this.setAttribute("shape",this.model.shape),this.model.icon?.length&&this.setAttribute("icon","left"),this.setAttribute("sfx","button"),l(t,this)}}a.bind("download-button-component",r);export{r as default};
