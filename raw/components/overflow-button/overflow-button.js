import{html as n,render as r}from"./lit-html.js";import e from"./env.js";import{parseDataset as d}from"./general.js";import a from"./overflow-menu.js";import{unsafeHTML as l}from"./unsafe-html.js";import{UUID as c}from"./uuid.js";import h from"./component.js";e.css(["button"]);class i extends h{constructor(){super();this.handleClick=()=>{const t=new a({uid:this.uid,items:this.model.items,target:this,callback:o=>{const s=new CustomEvent("action",{detail:{id:o},bubbles:!0,cancelable:!0});this.dispatchEvent(s)}});document.body.appendChild(t)};this.uid=c(),this.model={kind:"text",color:"grey",shape:"round",size:"default",icon:'<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" /></svg>',iconPosition:"center",disabled:!1,items:[]}}static get observedAttributes(){return["data-kind","data-color","data-shape","data-size","data-icon","data-icon-position","data-disabled","data-items"]}connected(){const t=d(this.dataset,this.model);this.set(t),this.addEventListener("click",this.handleClick)}render(){this.classList.add("bttn"),this.setAttribute("kind",this.model.kind),this.setAttribute("color",this.model.color),this.setAttribute("shape",this.model.shape),this.setAttribute("icon",this.model.iconPosition),this.setAttribute("size",this.model.size),this.model.disabled&&this.setAttribute("disabled",`${this.model.disabled}`);const t=n` ${l(this.model.icon)} `;r(t,this)}}e.bind("overflow-button",i);export{i as default};
