import{html as n,render as l}from"./lit-html.js";import o from"./env.js";import a from"./component.js";import{unsafeHTML as c}from"./unsafe-html.js";const i="[form-input]";o.css(["form"]);class s extends a{constructor(){super(...arguments);this.handleReset=e=>{e.preventDefault(),this.reset()}}connected(){this.render()}start(){const e=this.querySelector("submit-button");e&&e.trigger("START")}stop(){const e=this.querySelector('submit-button[state="SUBMITTING"]');e&&e.trigger("STOP")}reset(){this.querySelectorAll(i).forEach(e=>{e.reset()})}serialize(){this.start();const e={};return this.querySelectorAll(i).forEach(t=>{const r=t.getName();r==null||r===""?console.error("Form input is missing a name attribute.",t):e[r]=t.getValue()}),e}checkValidity(){let e=!0;return this.querySelectorAll(i).forEach(t=>{t.validate()||(e=!1)}),e}fail(e){const t={};this.querySelectorAll(i).forEach(r=>{t[r.getName()]=r});for(const r in e)t?.[r]?.setError(e[r]);this.stop()}render(){this.setAttribute("role","form");const e=this.innerHTML;this.innerHTML="";const t=n` <form @reset=${this.handleReset}>${c(e)}</form> `;l(t,this)}}o.bind("form-component",s);export{s as default};
