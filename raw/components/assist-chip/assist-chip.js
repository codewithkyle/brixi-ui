import{html as n,render as r}from"./lit-html.js";import a from"./supercomponent.js";import e from"./env.js";import{noop as l,parseDataset as o}from"./general.js";import{unsafeHTML as c}from"./unsafe-html.js";class i extends a{constructor(t){super();this.handleClick=()=>{this.model.callback()};this.handleKeydown=t=>{t.key===" "&&this.classList.add("is-active")};this.handleKeyup=t=>{t.key===" "&&(this.classList.remove("is-active"),this.model.callback())};this.model={css:"",class:"",attributes:{},label:null,callback:l,icon:""},this.model=o(this.dataset,this.model),e.css(["assist-chip"]).then(()=>{this.set(t,!0),this.render()})}connected(){this.addEventListener("click",this.handleClick),this.addEventListener("keyup",this.handleKeyup),this.addEventListener("keydown",this.handleKeydown)}renderIcon(){let t="";return this.model.icon instanceof HTMLElement?t=this.model.icon:typeof this.model.icon=="string"&&(t=c(this.model.icon)),t}render(){this.className=this.model.class,this.style.cssText=this.model.css,Object.keys(this.model.attributes).map(s=>{this.setAttribute(s,`${this.model.attributes[s]}`)}),this.tabIndex=0,this.setAttribute("role","button");const t=n`
            ${this.renderIcon()}
            <span>${this.model.label}</span>
        `;r(t,this)}}e.bind("assist-chip",i);export{i as default};
