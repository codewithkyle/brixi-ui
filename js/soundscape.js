/**
 * @see https://material.io/design/sound/sound-resources.html
 * @license CC-BY-4.0
 */class n{constructor(){this.mousemove=()=>{this.hasPointer=!0,window.removeEventListener("mousemove",this.mousemove)};this.mouseleave=t=>{const e=t.target;e instanceof HTMLElement&&e.getAttribute("sfx")==="button"&&(e.dataset.isMouseOver="0")};this.mouseover=t=>{const e=t.target;e instanceof HTMLElement&&t instanceof MouseEvent&&e.getAttribute("sfx")==="button"&&e.dataset.isMouseOver!=="1"&&(e.dataset.isMouseOver="1",this.play("hover"))};this.focus=t=>{if(this.hasPointer||this.hasTouched)return;const e=t.target;e instanceof HTMLElement&&e.getAttribute("sfx")==="button"&&(e.dataset.isMouseOver==="0"||!e.dataset.isMouseOver)&&this.play("hover")};this.click=t=>{window.TouchEvent&&t instanceof TouchEvent&&(this.hasTouched=!0);const e=t.target;let s=!1;t instanceof KeyboardEvent&&t.key.toLowerCase()===" "&&(s=!0),e instanceof HTMLElement&&(e.getAttribute("sfx")==="button"||e.closest('[sfx="button"]')!==null)&&(s||!(t instanceof KeyboardEvent))&&this.play("click")};this.hasTouched=!1,this.hasPointer=!1,this.sounds={},this.soundState=JSON.parse(localStorage.getItem("sfx")||"{}"),this.addButtonListeners()}addButtonListeners(){window.addEventListener("mousemove",this.mousemove,{capture:!0,passive:!0}),window.addEventListener("mouseenter",this.mouseover,{capture:!0,passive:!0}),window.addEventListener("mouseleave",this.mouseleave,{capture:!0,passive:!0}),window.addEventListener("focus",this.focus,{capture:!0,passive:!0}),window.addEventListener("blur",this.mouseleave,{capture:!0,passive:!0}),window.addEventListener("mousedown",this.click,{capture:!0,passive:!0}),window.addEventListener("touchstart",this.click,{capture:!0,passive:!0}),window.addEventListener("keydown",this.click,{capture:!0,passive:!0})}save(){localStorage.setItem("sfx",JSON.stringify(this.sounds))}toggleSound(t,e){t in this.sounds&&(this.soundState[t].isEnable=e?1:0,e?this.sounds[t].ctx.resume():this.sounds[t].ctx.suspend(),this.save())}play(t,e=!1){if(!(t in this.sounds)||!this.soundState?.[t]?.isEnable)return null;const s=this.sounds[t].ctx.createBufferSource();return s.buffer=this.sounds[t].buffer,s.connect(this.sounds[t].gain),s.loop=e,s.start(0),s}setVolume(t,e){t in this.sounds&&(this.sounds[t].gain.gain.value=e,this.soundState[t].volumn=e,this.save())}getVolume(t){return t in this.sounds?this.soundState[t].volumn:0}async add(t,e,s=!1){return this.sounds?.[t]&&!s?this.sounds[t]:(this.sounds[t]=await this.createSound(e),t in this.soundState||(this.soundState[t]={isEnable:1,volumn:1}),this.toggleSound(t,this.soundState[t].isEnable===1),this.setVolume(t,this.soundState[t].volumn),this.sounds[t])}get(t){return this.sounds?.[t]??null}async createSound(t){try{const s=await(await fetch(t)).arrayBuffer(),i={ctx:new AudioContext,gain:null,buffer:null};return i.gain=i.ctx.createGain(),i.gain.connect(i.ctx.destination),i.buffer=await i.ctx.decodeAudioData(s),i}catch(e){return console.error(e),{ctx:null,gain:null,buffer:null}}}async load(){const t=[this.add("hover","/audio/mouseover.wav",!0),this.add("click","/audio/mouseclick.wav",!0),this.add("error","/audio/error.wav",!0),this.add("error-alert","/audio/error-alert.wav",!0),this.add("warning","/audio/warning.wav",!0),this.add("notification","/audio/notification.wav",!0),this.add("success","/audio/success.wav",!0),this.add("snackbar","/audio/snackbar.wav",!0),this.add("activate","/audio/activate.wav",!0),this.add("deactivate","/audio/deactivate.wav",!0),this.add("camera","/audio/camera.wav",!0)];await Promise.all(t)}}const o=new n;export{o as default};
