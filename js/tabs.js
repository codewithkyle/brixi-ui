import{html as a,render as c}from"./lit-html.js";import d from"./supercomponent.js";import o from"./env.js";import{noop as r,parseDataset as u}from"./general.js";import{unsafeHTML as v}from"./unsafe-html.js";import p from"./sortablejs.js";import k from"./button.js";import{UUID as g}from"./uuid.js";class h extends d{constructor(t){super(),this.model={tabs:[],callback:r,active:0,css:"",class:"",attributes:{},sortable:!1,sortCallback:r,addCallback:r,removeCallback:r,expandable:!1,shrinkable:!1},this.model=u(this.dataset,this.model),o.css(["tabs","button"]).then(()=>{this.set(t,!0),this.render()})}getOrder(){const t=[];return this.querySelectorAll("tab-component").forEach(e=>{t.push(e.model.value)}),t}callback(t,e){this.set({active:e},!0),this.model.callback(t),this.querySelectorAll("tab-component").forEach(s=>{s.index===e?s.classList.add("is-active"):s.classList.remove("is-active")})}sort(){const t=this.querySelector("tabs-container");p.create(t,{onUpdate:e=>{const s=this.getOrder();this.model.sortCallback(s)}})}addTab(){const t=window.prompt("New Tab Label");if(t!=null&&t.trim()!==""){const e=g();this.model.addCallback(t.trim(),e);const s={label:t,value:e},i=this.get();i.tabs.push(s),this.set(i,!0);const n=new l(s,this,!0,i.tabs.length-1,this.model.shrinkable);this.querySelector("tabs-container").appendChild(n),this.sort(),this.callback(e,i.tabs.length-1),this.resetIndexes()}}resetIndexes(){this.querySelectorAll("tab-component").forEach((t,e)=>{t.index=e})}removeTab(t,e){const s=this.get();s.tabs.splice(e,1),s.active===e&&(s.active=0),this.set(s,!0),this.resetIndexes(),this.model.removeCallback(t),s.tabs.length&&this.callback(s.tabs[0].value,0)}renderAddButton(){let t;return this.model.expandable?t=new k({kind:"text",color:"grey",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>',iconPosition:"center",shape:"round",callback:this.addTab.bind(this)}):t="",t}render(){this.className=this.model.class,this.style.cssText=this.model.css,Object.keys(this.model.attributes).map(e=>{this.setAttribute(e,`${this.model.attributes[e]}`)});const t=a`
            <tabs-container>
                ${this.model.tabs.map((e,s)=>{const i=s===this.model.active;return a`${new l(e,this,i,s,this.model.shrinkable)}`})}
            </tabs-container>
            ${this.renderAddButton()}
        `;c(t,this),this.model.sortable&&setTimeout(this.sort.bind(this),80)}}class l extends d{constructor(e,s,i,n,b){super();this.handleClick=e=>{this.parent.callback(this.model.value,this.index)};this.removeTab=e=>{e.preventDefault(),e.stopImmediatePropagation(),window.confirm(`Are you sure you want to delete '${this.model.label}'?`)&&(this.remove(),this.parent.removeTab(this.model.value,this.index))};this.model=e,this.isActive=i,this.parent=s,this.index=n,this.shrinkable=b,this.render()}renderIcon(){let e;return this.model?.icon instanceof HTMLElement?e=a`<i>${this.model.icon}</i>`:typeof this.model?.icon=="string"&&this.model?.icon?.length?e=a` <i> ${v(this.model.icon)} </i> `:e="",e}renderRemoveButton(){let e;return this.shrinkable?e=a`
                <button type="button" @click=${this.removeTab} aria-label="Delete ${this.model.label}">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            `:e="",e}render(){const e=a` ${this.renderIcon()} ${this.model.label} ${this.renderRemoveButton()}`;this.tabIndex=0,this.setAttribute("sfx","button"),this.className=this.isActive?"is-active":"",this.setAttribute("role","button"),this.setAttribute("aria-label",`Open ${this.model.label}`),c(e,this)}connected(){this.addEventListener("click",this.handleClick)}disconnected(){this.removeEventListener("click",this.handleClick)}}o.bind("tab-component",l),o.bind("tabs-component",h);export{h as default};
